@using DuoQChallenge.Models.ViewModels
@model PlayerViewModel

<h1>Add Player</h1>

<hr />

<div class="row"> 
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Role" class="control-label"></label>
                <select asp-for="Role" class="form-control">
                    <option value="">Select a role</option>
                    <option value="TOP">Top</option>
                    <option value="JG">Jungle</option>
                    <option value="MID">Mid</option>
                    <option value="ADC">ADC</option>
                    <option value="SUP">Support</option>
                </select>
                <span asp-validation-for="Role" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="InGameName" class="control-label"></label>
                <input asp-for="InGameName" class="form-control"/>
                <span asp-validation-for="InGameName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}